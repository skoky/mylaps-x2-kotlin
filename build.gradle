
buildscript {
    ext.kotlin_version = '1.3.72'

    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }


    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}


repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

apply {
    plugin("kotlin-multiplatform")
    plugin("kotlinx-serialization")
}

def serialization_version = "0.20.0"

kotlin {

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        linuxX64Main {
            dependsOn commonMain
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$serialization_version"
            }
        }

        mingwX64 {
            dependsOn commonMain
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$serialization_version"
            }
        }
    }

    linuxX64() {

        compilations.main.cinterops {
            mylaps {
                includeDirs("sdk-master/include")
            }
            zmq {
                includeDirs("zmq")
            }
        }

        binaries {
            executable {
                baseName = 'x2'
                linkerOpts = ["-L${projectDir.path}/sdk-master/lib/linux/x86-64".toString(), "-L${projectDir.path}/zmq/linux".toString(), '-lmylapssdk', '-lzmq']
                println("Executable path: ${outputFile.absolutePath}".toString())
            }
        }
    }

    mingwX64 {
        compilations.main.cinterops {
            mylaps {
                includeDirs("sdk-master/include")
            }
            zmq {
                includeDirs("zmq")
            }
        }

        binaries {
            executable {
                baseName = 'x2'
                linkerOpts = ["-L${projectDir.path}/sdk-master/lib/windows/x64".toString(), "-L${projectDir.path}/zmq/windows".toString(), '-lMylapsSDK', '-lzmq-v141-mt-4_3_2']
                println("Executable path: ${outputFile.absolutePath}")
            }
        }
    }
}
